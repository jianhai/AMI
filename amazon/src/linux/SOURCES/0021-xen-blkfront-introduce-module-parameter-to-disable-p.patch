From 1b279022c4825628ff3047e39b27b9e4bd3dd359 Mon Sep 17 00:00:00 2001
From: Anthony Liguori <aliguori@amazon.com>
Date: Thu, 25 Sep 2014 08:07:54 -0700
Subject: xen-blkfront: introduce module parameter to disable persistent grants

Persistent grants make it far more likely to exhaust domain-0's grant
table entries particularily with a high number of devices across a
high number of domains.

It is useful for an instance to be able to control disabling this
feature to help mitigate against grant starvation.

Signed-off-by: Anthony Liguori <aliguori@amazon.com>
Signed-off-by: Cristian Gafton <gafton@amazon.com>
(cherry picked from commit e5250340e866d9f2aeeef0d7de62d85e2a7de7fb)
Signed-off-by: Munehisa Kamata <kamatam@amazon.com>
---
 drivers/block/xen-blkfront.c | 32 +++++++++++++++++++++-----------
 1 file changed, 21 insertions(+), 11 deletions(-)

diff --git a/drivers/block/xen-blkfront.c b/drivers/block/xen-blkfront.c
index 2fee2ee..e9a779e 100644
--- a/drivers/block/xen-blkfront.c
+++ b/drivers/block/xen-blkfront.c
@@ -99,6 +99,10 @@ static unsigned int xen_blkif_max_segments = 32;
 module_param_named(max, xen_blkif_max_segments, int, S_IRUGO);
 MODULE_PARM_DESC(max, "Maximum amount of segments in indirect requests (default is 32)");
 
+static unsigned int xen_blkif_feature_persistent = 1;
+module_param_named(persistent_grants, xen_blkif_feature_persistent, int, S_IRUGO);
+MODULE_PARM_DESC(persistent_grants, "Enable persistent grant table references (default is 1)");
+
 /*
  * Maximum order of pages to be used for the shared ring between front and
  * backend, 4KB page granularity is used.
@@ -1526,11 +1530,14 @@ again:
 		message = "writing protocol";
 		goto abort_transaction;
 	}
-	err = xenbus_printf(xbt, dev->nodename,
-			    "feature-persistent", "%u", 1);
-	if (err)
-		dev_warn(&dev->dev,
-			 "writing persistent grants feature to xenbus");
+
+	if (xen_blkif_feature_persistent) {
+		err = xenbus_printf(xbt, dev->nodename,
+				    "feature-persistent", "%u", 1);
+		if (err)
+			dev_warn(&dev->dev,
+				 "writing persistent grants feature to xenbus");
+	}
 
 	err = xenbus_transaction_end(xbt, 0);
 	if (err) {
@@ -1966,13 +1973,16 @@ static int blkfront_gather_backend_features(struct blkfront_info *info)
 	if (!err && discard)
 		blkfront_setup_discard(info);
 
-	err = xenbus_gather(XBT_NIL, info->xbdev->otherend,
-			"feature-persistent", "%u", &persistent,
-			NULL);
-	if (err)
+	if (xen_blkif_feature_persistent) {
+		err = xenbus_gather(XBT_NIL, info->xbdev->otherend,
+				    "feature-persistent", "%u", &persistent,
+				    NULL);
+		if (err)
+			info->feature_persistent = 0;
+		else
+			info->feature_persistent = persistent;
+	} else
 		info->feature_persistent = 0;
-	else
-		info->feature_persistent = persistent;
 
 	err = xenbus_gather(XBT_NIL, info->xbdev->otherend,
 			    "feature-max-indirect-segments", "%u", &indirect_segments,
-- 
2.7.4

